@model SaveFileViewModel
@{
    ViewData["Title"] = "Pokémon Save File";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <!-- Header -->
            <div class="text-center mb-4">
                <h1 class="display-4 text-primary mb-2">
                    <i class="fas fa-gamepad me-2"></i>Pokémon Save File
                </h1>
                <p class="lead text-muted">Trainer information and statistics</p>
            </div>

            <!-- Main Card -->
            <div class="card shadow-lg border-0 mb-4">
                <div class="card-header bg-primary text-white text-center py-3">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-user-circle me-2"></i>@Model.TrainerName
                    </h3>
                    <div class="d-flex justify-content-center align-items-center gap-3 mt-2">
                        <small class="opacity-75">Trainer ID: @Model.TrainerId</small>
                        <span class="badge bg-light text-dark">
                            <i class="fas fa-gamepad me-1"></i>Gen @Model.Generation
                        </span>
                        @if (!string.IsNullOrEmpty(Model.RivalName))
                        {
                            <small class="opacity-75">Rival: @Model.RivalName</small>
                        }
                    </div>
                </div>
                
                <div class="card-body p-4">
                    <!-- Trainer Stats Grid -->
                    <div class="row g-3">
                        <!-- Money -->
                        <div class="col-md-6">
                            <div class="card bg-success h-100">
                                <div class="card-body text-center text-white">
                                    <div class="d-flex align-items-center justify-content-center mb-2">
                                        <i class="fas fa-coins fa-2x me-2 text-warning"></i>
                                        <div>
                                            <h4 class="mb-0 fw-bold">@Model.Money.ToString("N0")</h4>
                                            <small class="text-light">Pokédollars</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Badge Count -->
                        <div class="col-md-6">
                            <div class="card bg-warning h-100">
                                <div class="card-body text-center text-dark">
                                    <div class="d-flex align-items-center justify-content-center mb-2">
                                        <i class="fas fa-medal fa-2x me-2 text-dark"></i>
                                        <div>
                                            <h4 class="mb-0 fw-bold text-dark">@Model.BadgeCount</h4>
                                            <small class="text-dark">Gym Badges</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Game Information -->
                        <div class="col-12">
                            <div class="card bg-dark text-white">
                                <div class="card-body text-center">
                                    <div class="row g-3 align-items-center">
                                        <div class="@(Model.Generation == 2 && !string.IsNullOrEmpty(Model.RivalName) ? "col-md-4" : "col-md-6")">
                                            <div class="d-flex align-items-center justify-content-center">
                                                <i class="fas fa-gamepad fa-2x me-3 text-info"></i>
                                                <div>
                                                    <h5 class="mb-0 text-white">Generation @Model.Generation</h5>
                                                    <small class="text-light">
                                                        @(Model.Generation == 1 ? "Red/Blue/Yellow" : "Gold/Silver/Crystal")
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                        @if (!string.IsNullOrEmpty(Model.RivalName))
                                        {
                                            <div class="@(Model.Generation == 2 ? "col-md-4" : "col-md-6")">
                                                <div class="d-flex align-items-center justify-content-center">
                                                    <i class="fas fa-user-ninja fa-2x me-3 text-danger"></i>
                                                    <div>
                                                        <h5 class="mb-0 text-white">@Model.RivalName</h5>
                                                        <small class="text-light">Your Rival</small>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if (Model.Generation == 2)
                                        {
                                            <div class="col-md-4">
                                                <div class="d-flex align-items-center justify-content-center">
                                                    <i class="fas fa-key fa-2x me-3 text-warning"></i>
                                                    <div>
                                                        <h5 class="mb-0 text-white font-monospace">@Model.TimeResetCode</h5>
                                                        <small class="text-light">Time Reset Code</small>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Pokédex Stats -->
                        <div class="col-12">
                            <div class="card bg-info">
                                <div class="card-header bg-dark text-white text-center border-0">
                                    <h5 class="text-white mb-0">
                                        <i class="fas fa-book me-2"></i>Pokédex Progress
                                    </h5>
                                </div>
                                <div class="card-body text-white" style="background-color: #0d6efd;">
                                    <div class="row g-3">
                                        <div class="col-sm-6">
                                            <div class="text-center p-3 rounded bg-primary">
                                                <i class="fas fa-eye fa-2x mb-2 text-white"></i>
                                                <h4 class="mb-1 text-white fw-bold">@Model.SeenCount</h4>
                                                <small class="text-light">Pokémon Seen</small>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="text-center p-3 rounded bg-success">
                                                <i class="fas fa-trophy fa-2x mb-2 text-white"></i>
                                                <h4 class="mb-1 text-white fw-bold">@Model.CaughtCount</h4>
                                                <small class="text-light">Pokémon Caught</small>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Progress Bar -->
                                    @{
                                        var completionRate = Model.SeenCount > 0 ? (double)Model.CaughtCount / Model.SeenCount * 100 : 0;
                                    }
                                    <div class="mt-3">
                                        <div class="d-flex justify-content-between align-items-center mb-1">
                                            <small class="text-white">Catch Rate</small>
                                            <small class="text-white fw-bold">@completionRate.ToString("F1")%</small>
                                        </div>
                                        <div class="progress" style="height: 10px; background-color: rgba(255,255,255,0.3);">
                                            <div class="progress-bar bg-warning" role="progressbar" 
                                                 style="width: @completionRate.ToString("F1")%" 
                                                 aria-valuenow="@completionRate" aria-valuemin="0" aria-valuemax="100">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Card Footer -->
                <div class="card-footer bg-light text-center">
                    <div class="row">
                        <div class="col">
                            <button class="btn btn-primary me-2">
                                <i class="fas fa-download me-1"></i>Export Data
                            </button>
                            <button class="btn btn-outline-primary">
                                <i class="fas fa-refresh me-1"></i>Reload
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Stats Cards -->
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-clock fa-2x text-primary mb-2"></i>
                            <h6 class="card-title">Play Time</h6>
                            <small class="text-muted">Data not available</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-map-marker-alt fa-2x text-success mb-2"></i>
                            <h6 class="card-title">Current Location</h6>
                            <small class="text-muted">Data not available</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center h-100">
                        <div class="card-body">
                            <i class="fas fa-star fa-2x text-warning mb-2"></i>
                            <h6 class="card-title">Hall of Fame</h6>
                            <small class="text-muted">Data not available</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add some interactive functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Animate progress bar on load
            const progressBar = document.querySelector('.progress-bar');
            if (progressBar) {
                const width = progressBar.style.width;
                progressBar.style.width = '0%';
                setTimeout(() => {
                    progressBar.style.transition = 'width 1.5s ease-in-out';
                    progressBar.style.width = width;
                }, 100);
            }

            // Add hover effects to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                    this.style.transition = 'transform 0.2s ease';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
}

<style>
    .card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .card:hover {
        box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
    }
    
    .bg-gradient {
        background: linear-gradient(135deg, var(--bs-primary), var(--bs-primary-dark)) !important;
    }
    
    .fas {
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
    }
    
    /* Fallback for Font Awesome icons if not loaded */
    .fas:before {
        content: "★";
    }
    
    .fa-gamepad:before { content: "🎮"; }
    .fa-user-circle:before { content: "👤"; }
    .fa-coins:before { content: "💰"; }
    .fa-medal:before { content: "🏅"; }
    .fa-book:before { content: "📖"; }
    .fa-eye:before { content: "👁"; }
    .fa-trophy:before { content: "🏆"; }
    .fa-download:before { content: "⬇"; }
    .fa-refresh:before { content: "🔄"; }
    .fa-clock:before { content: "⏰"; }
    .fa-map-marker-alt:before { content: "📍"; }
    .fa-star:before { content: "⭐"; }
    .fa-user-ninja:before { content: "🥷"; }
    .fa-key:before { content: "🔑"; }
</style>
